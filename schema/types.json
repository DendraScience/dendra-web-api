{
  "$id": "types.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "accessLevel": {
      "description": "A data access/visibility level: 0-restricted, 1-metadata, 2-graph, 3-download",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "example": 0
    },
    "accessLevels": {
      "additionalProperties": false,
      "description": "Data access/visibility specifications for various entities",
      "properties": {
        "explicit": {
          "$ref": "#/definitions/explicitAccessLevels"
        },
        "member_level": {
          "$ref": "#/definitions/accessLevel"
        },
        "public_level": {
          "$ref": "#/definitions/accessLevel"
        }
      },
      "type": "object"
    },
    "annotationAction": {
      "oneOf": [
        {
          "$ref": "#/definitions/annotationActionAttrib"
        },
        {
          "$ref": "#/definitions/annotationActionEvaluate"
        },
        {
          "$ref": "#/definitions/annotationActionExclude"
        },
        {
          "$ref": "#/definitions/annotationActionFlag"
        }
      ]
    },
    "annotationActionAttrib": {
      "additionalProperties": false,
      "properties": {
        "attrib": {
          "$ref": "#/definitions/datastreamAttributes"
        }
      },
      "required": [
        "attrib"
      ],
      "type": "object"
    },
    "annotationActionEvaluate": {
      "additionalProperties": false,
      "properties": {
        "evaluate": {
          "example": "v = (v / 0.254) * 0.1",
          "type": "string"
        }
      },
      "required": [
        "evaluate"
      ],
      "type": "object"
    },
    "annotationActionExclude": {
      "additionalProperties": false,
      "properties": {
        "exclude": {
          "const": true,
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "exclude"
      ],
      "type": "object"
    },
    "annotationActionFlag": {
      "additionalProperties": false,
      "properties": {
        "flag": {
          "example": [
            "X"
          ],
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "flag"
      ],
      "type": "object"
    },
    "annotationActions": {
      "description": "Specific actions to apply against the identified datapoints",
      "items": {
        "$ref": "#/definitions/annotationAction"
      },
      "minItems": 1,
      "type": "array"
    },
    "annotationId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e0a0"
    },
    "builtDatapointsConfig": {
      "description": "System generated service configuration for fetching datapoints",
      "items": {
        "type": "object",
        "example": {}
      },
      "minItems": 1,
      "type": "array"
    },
    "companyId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e100"
    },
    "createdAt": {
      "$ref": "#/definitions/isoDatetimeUTC",
      "description": "Timestamp of when the document was created"
    },
    "createdBy": {
      "$ref": "#/definitions/objectId",
      "description": "Identifier of user that created this document"
    },
    "datapointPaginationMeta": {
      "properties": {
        "limit": {
          "$ref": "#/definitions/paginationLimit"
        }
      },
      "type": "object"
    },
    "datapointQueryLimit": {
      "default": 1440,
      "description": "Specify the maximum number of datapoints to return",
      "example": 60,
      "maximum": 10080,
      "type": "integer"
    },
    "datapointQueryParameters": {
      "properties": {
        "$limit": {
          "$ref": "#/definitions/datapointQueryLimit"
        },
        "$sort[time]": {
          "$ref": "#/definitions/querySort",
          "default": -1,
          "description": "Specify the sort order"
        },
        "lat": {
          "description": "Return datapoints for the given latitude",
          "example": 37.3382082,
          "type": "number"
        },
        "lon": {
          "description": "Return datapoints for the given longitude (alias 'lng')",
          "example": -121.8863286,
          "type": "number"
        },
        "som_id": {
          "$ref": "#/definitions/somId",
          "description": "Attempt to convert the datapoint values to this system of measurement"
        },
        "time[$op]": {
          "$ref": "#/definitions/isoDatetimeUTC",
          "description": "Filter on time using query operators: $lt, $lte, $gt, $gte",
          "example": "2017-05-11T00:00:00Z"
        },
        "time_local": {
          "default": false,
          "description": "Whether the time parameter is in local time",
          "example": true,
          "type": "boolean"
        },
        "uom_id": {
          "$ref": "#/definitions/uomId",
          "description": "Attempt to convert the datapoint values to this unit of measurement"
        }
      },
      "type": "object"
    },
    "datapointsConfig": {
      "description": "User-defined service configuration for fetching datapoints",
      "items": {
        "$ref": "#/definitions/datapointsConfigInstance"
      },
      "minItems": 1,
      "type": "array"
    },
    "datapointsConfigInstance": {
      "additionalProperties": false,
      "properties": {
        "actions": {
          "anyOf": [
            {
              "$ref": "#/definitions/annotationActionEvaluate"
            }
          ]
        },
        "begins_at": {
          "$ref": "#/definitions/isoDatetimeUTC"
        },
        "connection": {
          "example": "legacy",
          "type": "string"
        },
        "ends_before": {
          "$ref": "#/definitions/isoDatetimeUTC"
        },
        "params": {
          "example": {
            "query": {
              "datastream_id": 3090,
              "time_adjust": -28800
            }
          },
          "type": "object"
        },
        "path": {
          "example": "/datavalues-ucnrs",
          "type": "string"
        }
      },
      "required": [
        "params",
        "path"
      ],
      "type": "object"
    },
    "datastreamAttributes": {
      "description": "User-defined attributes for the datastream",
      "example": {
        "height": {
          "unit_tag": "dt_Unit_Meter",
          "value": 10
        }
      },
      "type": "object"
    },
    "datastreamId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e020"
    },
    "datastreamLookupParameters": {
      "properties": {
        "datastream_field_name": {
          "$ref": "#/definitions/queryField"
        },
        "datastream_field_name[$op]": {
          "$ref": "#/definitions/queryFieldOp"
        },
        "datastream_id": {
          "$ref": "#/definitions/queryField"
        },
        "datastream_id[$op]": {
          "$ref": "#/definitions/queryFieldOp"
        }
      },
      "type": "object"
    },
    "datastreamSource": {
      "example": "edu.berkeley.sensor.ucnrs.legacy.odm",
      "type": "string"
    },
    "datastreamSourceType": {
      "description": "The specific type of data producing entity",
      "enum": [
        "deriver",
        "procedure",
        "sensor",
        "service"
      ],
      "example": "sensor",
      "type": "string"
    },
    "description": {
      "description": "Text describing this document",
      "example": "Data is a precious thing and will last longer than the systems themselves (Tim Berners-Lee).",
      "type": "string"
    },
    "downloadId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e0f0"
    },
    "email": {
      "description": "The primary contact email address",
      "example": "collin@berkeley.edu",
      "type": "string"
    },
    "explicitAccessLevel": {
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "level": {
              "$ref": "#/definitions/accessLevel"
            },
            "organization_id": {
              "$ref": "#/definitions/organizationId"
            }
          },
          "required": [
            "level",
            "organization_id"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "level": {
              "$ref": "#/definitions/accessLevel"
            },
            "person_id": {
              "$ref": "#/definitions/personId"
            }
          },
          "required": [
            "level",
            "person_id"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "level": {
              "$ref": "#/definitions/accessLevel"
            },
            "team_id": {
              "$ref": "#/definitions/teamId"
            }
          },
          "required": [
            "level",
            "team_id"
          ],
          "type": "object"
        }
      ]
    },
    "explicitAccessLevels": {
      "description": "A list of explicit data access/visibility specifications",
      "example": [
        {
          "level": 2,
          "organization_id": "592f155746a1b867a114e030"
        },
        {
          "level": 2,
          "person_id": "592f155746a1b867a114e040"
        },
        {
          "level": 2,
          "team_id": "592f155746a1b867a114e0c0"
        }
      ],
      "items": {
        "$ref": "#/definitions/explicitAccessLevel"
      },
      "minItems": 1,
      "type": "array"
    },
    "externalLink": {
      "additionalProperties": false,
      "description": "An external site link to display in any user interface",
      "properties": {
        "title": {
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/url"
        }
      },
      "required": [
        "title",
        "url"
      ],
      "type": "object"
    },
    "externalLinks": {
      "description": "A list of external site links to display in any user interface",
      "items": {
        "$ref": "#/definitions/externalLink"
      },
      "minItems": 1,
      "type": "array"
    },
    "externalRef": {
      "additionalProperties": false,
      "description": "An external or foreign key associated with this document",
      "properties": {
        "identifier": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/url"
        }
      },
      "type": "object"
    },
    "externalRefs": {
      "description": "A list of external or foreign keys associated with this document",
      "items": {
        "$ref": "#/definitions/externalRef"
      },
      "minItems": 1,
      "type": "array"
    },
    "generalConfig": {
      "description": "User-defined general configuration for various entities",
      "example": {
        "station_warning_threshold_minutes": 120
      },
      "type": "object"
    },
    "geoLinearRing": {
      "description": "An array of four or more GeoJSON positions where the first equals the last",
      "items": {
        "$ref": "#/definitions/geoPosition"
      },
      "minItems": 4,
      "type": "array"
    },
    "geoLinearRingArray": {
      "description": "An array of GeoJSON linear rings",
      "items": {
        "$ref": "#/definitions/geoLinearRing"
      },
      "minItems": 1,
      "type": "array"
    },
    "geoMultiPolygon": {
      "additionalProperties": false,
      "description": "An GeoJSON multi-polygon (i.e. an array of linear ring arrays)",
      "example": [
        [
          [
            [
              -109.060253,
              38.599328
            ],
            [
              -109.059541,
              38.719888
            ],
            [
              -109.057388,
              38.795456
            ],
            [
              -109.054189,
              38.874984
            ]
          ]
        ]
      ],
      "properties": {
        "coordinates": {
          "items": {
            "$ref": "#/definitions/geoLinearRingArray"
          },
          "minItems": 1,
          "type": "array"
        },
        "type": {
          "const": "MultiPolygon",
          "example": "MultiPolygon",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "geoObject": {
      "oneOf": [
        {
          "$ref": "#/definitions/geoPoint"
        },
        {
          "$ref": "#/definitions/geoPolygon"
        },
        {
          "$ref": "#/definitions/geoMultiPolygon"
        }
      ]
    },
    "geoPoint": {
      "additionalProperties": false,
      "description": "A GeoJSON point having one position (i.e. longitude, latitude, altitude)",
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/geoPosition"
        },
        "type": {
          "const": "Point",
          "example": "Point",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "geoPolygon": {
      "additionalProperties": false,
      "description": "A GeoJSON polygon (i.e. an array of linear rings)",
      "example": [
        [
          [
            -109.060253,
            38.599328
          ],
          [
            -109.059541,
            38.719888
          ],
          [
            -109.057388,
            38.795456
          ],
          [
            -109.054189,
            38.874984
          ]
        ]
      ],
      "properties": {
        "coordinates": {
          "$ref": "#/definitions/geoLinearRingArray"
        },
        "type": {
          "const": "Polygon",
          "example": "Polygon",
          "type": "string"
        }
      },
      "required": [
        "type",
        "coordinates"
      ],
      "type": "object"
    },
    "geoPosition": {
      "description": "A GeoJSON position (i.e. longitude, latitude, altitude)",
      "example": [
        -121.73638,
        37.381666,
        574.548
      ],
      "items": {
        "type": "number"
      },
      "maxItems": 3,
      "minItems": 2,
      "type": "array"
    },
    "hashes": {
      "description": "System generated hashes for uniquing and indexing this document",
      "example": [
        {
          "digest": "A54D88E06612D820BC3BE72877C74F257B561B19",
          "scheme_id": "ds",
          "type": "doc"
        }
      ],
      "type": "array"
    },
    "interval": {
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "begins_at": {
              "$ref": "#/definitions/isoDatetimeUTC"
            },
            "ends_before": {
              "$ref": "#/definitions/isoDatetimeUTC"
            }
          },
          "required": [
            "begins_at",
            "ends_before"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "begins_at": {
              "$ref": "#/definitions/isoDatetimeUTC"
            }
          },
          "required": [
            "begins_at"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "ends_before": {
              "$ref": "#/definitions/isoDatetimeUTC"
            }
          },
          "required": [
            "ends_before"
          ],
          "type": "object"
        }
      ]
    },
    "intervals": {
      "description": "A list of intervals with a begins_at and ends_before",
      "items": {
        "$ref": "#/definitions/interval"
      },
      "minItems": 1,
      "type": "array"
    },
    "involvedParties": {
      "description": "A list of involved party role assignments",
      "example": [
        {
          "organization_id": "592f155746a1b867a114e030",
          "roles": [
            "contact"
          ]
        },
        {
          "person_id": "592f155746a1b867a114e040",
          "roles": [
            "admin",
            "contact"
          ]
        },
        {
          "roles": [
            "contact"
          ],
          "team_id": "592f155746a1b867a114e0c0"
        }
      ],
      "items": {
        "$ref": "#/definitions/involvedParty"
      },
      "minItems": 1,
      "type": "array"
    },
    "involvedParty": {
      "description": "An involved party role assignment",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "organization_id": {
              "$ref": "#/definitions/organizationId"
            },
            "roles": {
              "$ref": "#/definitions/roles"
            }
          },
          "required": [
            "roles",
            "organization_id"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "person_id": {
              "$ref": "#/definitions/personId"
            },
            "roles": {
              "$ref": "#/definitions/roles"
            }
          },
          "required": [
            "roles",
            "person_id"
          ],
          "type": "object"
        },
        {
          "additionalProperties": false,
          "properties": {
            "roles": {
              "$ref": "#/definitions/roles"
            },
            "team_id": {
              "$ref": "#/definitions/teamId"
            }
          },
          "required": [
            "roles",
            "team_id"
          ],
          "type": "object"
        }
      ]
    },
    "isEnabled": {
      "description": "Whether this document is enabled (functional) in the system",
      "example": true,
      "type": "boolean"
    },
    "isGeoProtected": {
      "description": "Whether this document's geo coordinate information is protected (sensitive)",
      "example": false,
      "type": "boolean"
    },
    "isHidden": {
      "description": "Whether this document is hidden in most queries",
      "example": false,
      "type": "boolean"
    },
    "isoCountryCode3": {
      "description": "An ISO 3166-1 alpha-3 country code",
      "example": "USA",
      "type": "string"
    },
    "isoDate": {
      "example": "2017-05-28",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
      "type": "string"
    },
    "isoDatetimeLocal": {
      "example": "2017-05-28T09:50:23.106",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}[T][0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{0,3}$",
      "type": "string"
    },
    "isoDatetimeUTC": {
      "example": "2017-05-28T09:50:23.106Z",
      "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{0,3}Z$",
      "type": "string"
    },
    "label": {
      "description": "A metadata label assigned to entities and used to construct tags",
      "example": "Variable",
      "maxLength": 50,
      "type": "string"
    },
    "media": {
      "description": "Image and video resources at specific sizes and pixel densities",
      "example": [
        {
          "sizes": {
            "large": {
              "h": 1080,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_1080,w_1080/photo.jpg",
              "w": 1080
            },
            "medium": {
              "h": 480,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_480,w_480/photo.jpg",
              "w": 480
            },
            "medium_2x": {
              "h": 960,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_960,w_960/photo.jpg",
              "w": 960
            },
            "small": {
              "h": 240,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_240,w_240/photo.jpg",
              "w": 240
            },
            "small_2x": {
              "h": 480,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_480,w_480/photo.jpg",
              "w": 480
            },
            "thumb": {
              "h": 60,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_60,w_60/photo.jpg",
              "w": 60
            },
            "thumb_2x": {
              "h": 120,
              "url": "http://res.cloudinary.com/dendro/image/upload/c_fill,g_center,h_120,w_120/photo.jpg",
              "w": 120
            }
          },
          "type": "photo"
        }
      ],
      "items": {
        "additionalProperties": false,
        "properties": {
          "caption": {
            "type": "string"
          },
          "sizes": {
            "properties": {
              "large": {
                "$ref": "#/definitions/mediaSize"
              },
              "medium": {
                "$ref": "#/definitions/mediaSize"
              },
              "medium_2x": {
                "$ref": "#/definitions/mediaSize"
              },
              "small": {
                "$ref": "#/definitions/mediaSize"
              },
              "small_2x": {
                "$ref": "#/definitions/mediaSize"
              },
              "thumb": {
                "$ref": "#/definitions/mediaSize"
              },
              "thumb_2x": {
                "$ref": "#/definitions/mediaSize"
              }
            },
            "required": [
              "large",
              "medium",
              "small",
              "thumb"
            ],
            "type": "object"
          },
          "type": {
            "const": "photo",
            "type": "string"
          }
        },
        "required": [
          "sizes",
          "type"
        ],
        "type": "object"
      },
      "minItems": 1,
      "type": "array"
    },
    "mediaSize": {
      "additionalProperties": false,
      "properties": {
        "h": {
          "type": "integer"
        },
        "url": {
          "$ref": "#/definitions/url"
        },
        "w": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "membershipId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e080"
    },
    "monitorId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e110"
    },
    "objectId": {
      "description": "The unique document identifier",
      "example": "592f155746a1b867a114e010",
      "maxLength": 24,
      "pattern": "^[a-fA-F0-9]{24}$",
      "type": "string"
    },
    "options": {
      "description": "Key/value pairs to further configure this item",
      "type": "object"
    },
    "organizationId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e030"
    },
    "paginationLimit": {
      "description": "Maximum number of items per page",
      "example": 10,
      "type": "integer"
    },
    "paginationMeta": {
      "properties": {
        "limit": {
          "$ref": "#/definitions/paginationLimit"
        },
        "skip": {
          "$ref": "#/definitions/paginationSkip"
        },
        "total": {
          "$ref": "#/definitions/paginationTotal"
        }
      },
      "type": "object"
    },
    "paginationSkip": {
      "description": "Number of skipped items (offset)",
      "example": 2,
      "type": "integer"
    },
    "paginationTotal": {
      "description": "Total number of records",
      "example": 1,
      "type": "integer"
    },
    "personId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e041"
    },
    "placeId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e050"
    },
    "queryField": {
      "description": "Filter where a field is equal to the supplied value",
      "example": "field_value"
    },
    "queryFieldOp": {
      "description": "Filter using advanced query operators: $in, $nin, $lt, $lte, $gt, $gte, $ne, and $or",
      "example": "field_value"
    },
    "queryLimit": {
      "default": 200,
      "description": "Specify the maximum number of items to return",
      "example": 10,
      "maximum": 2000,
      "type": "integer"
    },
    "queryParameters": {
      "properties": {
        "$limit": {
          "$ref": "#/definitions/queryLimit"
        },
        "$select[field_name]": {
          "$ref": "#/definitions/querySelect"
        },
        "$skip": {
          "$ref": "#/definitions/querySkip"
        },
        "$sort[field_name]": {
          "$ref": "#/definitions/querySort"
        },
        "field_name": {
          "$ref": "#/definitions/queryField"
        },
        "field_name[$op]": {
          "$ref": "#/definitions/queryFieldOp"
        }
      },
      "type": "object"
    },
    "querySelect": {
      "description": "Pick which fields to include in the results",
      "enum": [
        1
      ],
      "example": 1
    },
    "querySkip": {
      "default": 0,
      "description": "Specify the number of items to skip over (offset)",
      "example": 2,
      "type": "integer"
    },
    "querySort": {
      "description": "Specify the fields to sort by and the respective sort order",
      "enum": [
        -1,
        1
      ],
      "example": 1
    },
    "result": {
      "description": "Processing information returned by the system",
      "type": "object"
    },
    "roles": {
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "type": "array"
    },
    "schedule": {
      "description": "Key/value pairs to further schedule this item",
      "type": "object"
    },
    "schemeId": {
      "$ref": "#/definitions/stringId",
      "example": "ds"
    },
    "serviceSpec": {
      "additionalProperties": false,
      "description": "Specifications for downstream service processing",
      "properties": {
        "comment": {
          "$ref": "#/definitions/description"
        },
        "method": {
          "type": "string"
        },
        "notify": {
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "options": {
          "$ref": "#/definitions/options"
        },
        "schedule": {
          "$ref": "#/definitions/schedule"
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "slug": {
      "description": "A human-readable and URL-friendly name used to retrieve this document's page or resource",
      "example": "document-name",
      "pattern": "^[a-z0-9-]+$",
      "type": "string"
    },
    "somId": {
      "$ref": "#/definitions/stringId",
      "example": "imp"
    },
    "sortValue": {
      "description": "A numeric value that controls how the document is ordered in lists",
      "example": 10,
      "type": "integer"
    },
    "stationId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e060"
    },
    "storageMethod": {
      "description": "The location where files will be accessed or managed",
      "enum": [
        "gdrive",
        "local",
        "minio"
      ],
      "example": "local",
      "type": "string"
    },
    "storageSpec": {
      "additionalProperties": false,
      "description": "Specifications for service storage mechanisms to use",
      "properties": {
        "method": {
          "$ref": "#/definitions/storageMethod"
        },
        "options": {
          "$ref": "#/definitions/options"
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "stringId": {
      "description": "The unique document identifier",
      "example": "document-id",
      "maxLength": 50,
      "type": "string"
    },
    "tags": {
      "description": "One or more tags in the format: <schemeId>&#95;<vocabularyLabel>&#95;<termLabel>",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "type": "array"
    },
    "teamId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e0c0"
    },
    "terms": {
      "description": "Vocabulary term assignments organized by scheme",
      "example": {
        "ds": {
          "Aggregate": "Average",
          "Medium": "Air",
          "Variable": "Temperature"
        },
        "dt": {
          "Unit": "DegreeFahrenheit"
        }
      },
      "type": "object"
    },
    "thingId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e070"
    },
    "thingTypeId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e0d0"
    },
    "timeZoneAbbr": {
      "description": "A time zone abbreviation",
      "example": "PST",
      "type": "string"
    },
    "timeZoneInfo": {
      "description": "Any additional time zone attributes, such as offset",
      "type": "object"
    },
    "timeZoneName": {
      "description": "A valid time zone name as found in the IANA time zone database",
      "example": "America/Los_Angeles",
      "type": "string"
    },
    "unset": {
      "const": "",
      "type": "string"
    },
    "uomId": {
      "$ref": "#/definitions/stringId",
      "example": "degree-fahrenheit"
    },
    "updatedAt": {
      "$ref": "#/definitions/isoDatetimeUTC",
      "description": "Last updated timestamp"
    },
    "updatedBy": {
      "$ref": "#/definitions/objectId",
      "description": "Identifier of user that updated this document"
    },
    "uploadId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e0e0"
    },
    "url": {
      "format": "uri",
      "type": "string"
    },
    "userId": {
      "$ref": "#/definitions/objectId",
      "example": "592f155746a1b867a114e040"
    },
    "utcOffset": {
      "description": "An offset in seconds between the time zone and UTC",
      "example": -28800,
      "type": "integer"
    },
    "versionId": {
      "$ref": "#/definitions/objectId",
      "description": "The automatically assigned version identifier",
      "example": "592f155746a1b867a114e0b0"
    },
    "vocabularyId": {
      "$ref": "#/definitions/stringId",
      "example": "ds-aggregate"
    }
  },
  "hidden": true
}